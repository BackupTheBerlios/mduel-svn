// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package server.mediator;

public final class MediatorImpl_Stub
    extends java.rmi.server.RemoteStub
    implements server.mediator.Mediator, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_findAgent_0;
    private static java.lang.reflect.Method $method_getActionList_1;
    private static java.lang.reflect.Method $method_getAgentFactory_2;
    private static java.lang.reflect.Method $method_getInfo_3;
    private static java.lang.reflect.Method $method_getNextAction_4;
    private static java.lang.reflect.Method $method_interrupt_5;
    private static java.lang.reflect.Method $method_registerAgent_6;
    private static java.lang.reflect.Method $method_run_7;
    private static java.lang.reflect.Method $method_skipActionList_8;
    private static java.lang.reflect.Method $method_transferActions_9;
    private static java.lang.reflect.Method $method_unregisterAgent_10;
    
    static {
	try {
	    $method_findAgent_0 = server.mediator.Mediator.class.getMethod("findAgent", new java.lang.Class[] {java.lang.Object.class});
	    $method_getActionList_1 = server.mediator.Mediator.class.getMethod("getActionList", new java.lang.Class[] {server.agent.Agent.class});
	    $method_getAgentFactory_2 = server.mediator.Mediator.class.getMethod("getAgentFactory", new java.lang.Class[] {});
	    $method_getInfo_3 = server.mediator.Mediator.class.getMethod("getInfo", new java.lang.Class[] {});
	    $method_getNextAction_4 = server.mediator.Mediator.class.getMethod("getNextAction", new java.lang.Class[] {server.agent.Agent.class});
	    $method_interrupt_5 = server.mediator.Mediator.class.getMethod("interrupt", new java.lang.Class[] {java.lang.String.class, server.action.Action.class});
	    $method_registerAgent_6 = server.mediator.Mediator.class.getMethod("registerAgent", new java.lang.Class[] {server.agent.Agent.class, server.mediator.AgentInfo.class});
	    $method_run_7 = server.mediator.Mediator.class.getMethod("run", new java.lang.Class[] {});
	    $method_skipActionList_8 = server.mediator.Mediator.class.getMethod("skipActionList", new java.lang.Class[] {server.agent.Agent.class});
	    $method_transferActions_9 = server.mediator.Mediator.class.getMethod("transferActions", new java.lang.Class[] {server.agent.Agent.class, server.agent.Agent.class});
	    $method_unregisterAgent_10 = server.mediator.Mediator.class.getMethod("unregisterAgent", new java.lang.Class[] {server.agent.Agent.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public MediatorImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of findAgent(Object)
    public server.agent.Agent findAgent(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_findAgent_0, new java.lang.Object[] {$param_Object_1}, -1972242090202395990L);
	    return ((server.agent.Agent) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getActionList(Agent)
    public java.util.LinkedList getActionList(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getActionList_1, new java.lang.Object[] {$param_Agent_1}, 4721923558631706667L);
	    return ((java.util.LinkedList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAgentFactory()
    public server.agent.AgentFactory getAgentFactory()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAgentFactory_2, null, -821664869349972598L);
	    return ((server.agent.AgentFactory) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getInfo()
    public java.util.LinkedList getInfo()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getInfo_3, null, -327746173045741248L);
	    return ((java.util.LinkedList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getNextAction(Agent)
    public server.action.Action getNextAction(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getNextAction_4, new java.lang.Object[] {$param_Agent_1}, 6874125506406386184L);
	    return ((server.action.Action) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of interrupt(String, Action)
    public void interrupt(java.lang.String $param_String_1, server.action.Action $param_Action_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_interrupt_5, new java.lang.Object[] {$param_String_1, $param_Action_2}, 2827565372428675801L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of registerAgent(Agent, AgentInfo)
    public void registerAgent(server.agent.Agent $param_Agent_1, server.mediator.AgentInfo $param_AgentInfo_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_registerAgent_6, new java.lang.Object[] {$param_Agent_1, $param_AgentInfo_2}, -5277849514710765545L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of run()
    public void run()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_run_7, null, -8003352271541955702L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of skipActionList(Agent)
    public void skipActionList(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_skipActionList_8, new java.lang.Object[] {$param_Agent_1}, -3098273738534381536L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of transferActions(Agent, Agent)
    public void transferActions(server.agent.Agent $param_Agent_1, server.agent.Agent $param_Agent_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_transferActions_9, new java.lang.Object[] {$param_Agent_1, $param_Agent_2}, -1869751625733355635L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of unregisterAgent(Agent)
    public void unregisterAgent(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_unregisterAgent_10, new java.lang.Object[] {$param_Agent_1}, 1133877463488813820L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
