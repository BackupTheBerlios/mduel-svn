// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package server;

public final class AgentHostImpl_Stub
    extends java.rmi.server.RemoteStub
    implements server.AgentHost, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_accept_0;
    private static java.lang.reflect.Method $method_getHostname_1;
    private static java.lang.reflect.Method $method_moveTo_2;
    private static java.lang.reflect.Method $method_remove_3;
    private static java.lang.reflect.Method $method_reportBack_4;
    private static java.lang.reflect.Method $method_reportBackLast_5;
    
    static {
	try {
	    $method_accept_0 = server.AgentHost.class.getMethod("accept", new java.lang.Class[] {server.agent.Agent.class});
	    $method_getHostname_1 = server.AgentHost.class.getMethod("getHostname", new java.lang.Class[] {});
	    $method_moveTo_2 = server.AgentHost.class.getMethod("moveTo", new java.lang.Class[] {server.agent.Agent.class});
	    $method_remove_3 = server.AgentHost.class.getMethod("remove", new java.lang.Class[] {server.agent.Agent.class});
	    $method_reportBack_4 = server.AgentHost.class.getMethod("reportBack", new java.lang.Class[] {server.repository.AgentReport.class});
	    $method_reportBackLast_5 = server.AgentHost.class.getMethod("reportBackLast", new java.lang.Class[] {server.repository.HostReport.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public AgentHostImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of accept(Agent)
    public void accept(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_accept_0, new java.lang.Object[] {$param_Agent_1}, 8291560071740420981L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getHostname()
    public java.lang.String getHostname()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getHostname_1, null, 1650924292415669172L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of moveTo(Agent)
    public void moveTo(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_moveTo_2, new java.lang.Object[] {$param_Agent_1}, 5422463855511923716L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remove(Agent)
    public void remove(server.agent.Agent $param_Agent_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_remove_3, new java.lang.Object[] {$param_Agent_1}, -6653679285352365378L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of reportBack(AgentReport)
    public void reportBack(server.repository.AgentReport $param_AgentReport_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_reportBack_4, new java.lang.Object[] {$param_AgentReport_1}, 6083751171922671608L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of reportBackLast(HostReport)
    public void reportBackLast(server.repository.HostReport $param_HostReport_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_reportBackLast_5, new java.lang.Object[] {$param_HostReport_1}, 296094410779017989L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
